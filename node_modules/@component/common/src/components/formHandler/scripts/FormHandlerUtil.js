{
  const formUtil = {
    escapeId(id) {
      return id && id.replace && id.replace(/(:|\.|\[|\])/g, '\\$1');
    },

    getNodeByName(validateField, rules) {
      if (typeof validateField !== 'string') {
        return '';
      }
      const arr = validateField.split(/[.,]/);
      const newObj = rules;
      const node = this.getNode(arr, newObj);
      return node;
    },

    // returns false if any key in pathArr is NOT found
    getNode(pathArr, configHash) {
      const tmp = {};

      for (let i = 0; i < pathArr.length; i++) {
        const key = pathArr[i].trim();
        if (configHash[key]) {
          tmp[key] = configHash[key];
        } else {
          return false;
        }
      }
      return tmp;
    },
  };

  module.exports = formUtil;
}
