// #MODULE - Multi Accordion
// > Author: Mahesh Dontula
// >
// > Create Date: June 2, 2017
// >
// ##DESCRIPTION:
// This module implements the multi accordion component
{
  const $ = require('jquery');

  function accordionAccessibilty(target) {
    if ($(target).hasClass('ui-state-active')) {
      $(target).attr('aria-expanded', 'true');
    } else {
      $(target).attr('aria-expanded', 'false');
    }
  }

  function doToggle(options, target, shouldToggle) {
    const slideOptions = {
      duration: options.duration,
    };

    if (!$(target).hasClass('ui-state-active') && options.SingleAccord === true) {
      $(target)
        .siblings('.ui-accordion-content')
        .css('display', 'none')
        .siblings('.ui-state-active')
        .removeClass('ui-state-active')
        .find('> .ui-icon')
        .removeClass(options.icons.activeHeader)
        .addClass(options.icons.header);
    }

    const content = $(target)
      .toggleClass('ui-state-active', shouldToggle)
      .find('> .ui-icon');

    if (shouldToggle === true) {
      content
        .removeClass(options.icons.header)
        .addClass(options.icons.activeHeader)
        .end()
        .next()
        .removeClass('hidden')
        .slideDown(slideOptions);
    } else {
      content
        .toggleClass(`${options.icons.header} ${options.icons.activeHeader}`)
        .end()
        .next()
        .removeClass('hidden')
        .slideToggle(slideOptions);
    }

    accordionAccessibilty(target);
  }

  const MultiAccordion = function (opts) {
    const options = opts;
    if (!options || !options.el) {
      return;
    }

    // initializng options
    options.SingleAccord = options.SingleAccord || false;
    options.active = options.active || 0;
    options.duration = typeof options.duration === 'number' ? options.duration : 0;
    options.header = options.header || '> h5';
    options.icons = options.icons || {
      header: 'plus-small',
      activeHeader: 'minus-small',
    };
    options.noInitialAnimation = options.noInitialAnimation || false;

    $(options.el)
      .addClass('ui-accordion ui-accordion-icons ui-widget ui-helper-reset')
      .find(options.header)
      .addClass('ui-accordion-header ui-helper-reset ui-state-default')
      .attr({
        'aria-expanded': 'false',
        tabindex: '0',
      })
      .append(`<span class="ui-icon ${options.icons.header}"></span>`)
      .on('accordionToggle', function () {
        doToggle(options, this);
      })
      .click(function () {
        $(this).trigger('accordionToggle');
      })
      .keyup(function (e) {
        const keyCode = e.keyCode ? e.keyCode : e.which;
        if (keyCode === 13) {
          $(this).trigger('accordionToggle');
        }
      })
      .next()
      .addClass('ui-accordion-content ui-helper-reset no-division')
      .hide();

    this.options = options;
    this.setActive(options.active, null, options.noInitialAnimation);
  };

  MultiAccordion.prototype.setActive = function (index, shouldToggle, noInitialAnimation) {
    const options = this.options;

    if (noInitialAnimation) {
      options.duration = 0;
    }

    if (noInitialAnimation) {
      options.duration = 0;
    }

    if (index !== undefined) {
      if (typeof index === 'number' || typeof index === 'object') {
        $(options.el)
          .find(options.header)
          .each(function (i) {
            if (typeof index === 'object') {
              if (index.indexOf(i) !== -1) {
                doToggle(options, this, shouldToggle);
              }
            } else if (index === i) {
              doToggle(options, this, shouldToggle);
            }
          });
      } else if (typeof index === 'string') {
        const element = $(options.el).find(index);
        doToggle(options, element, shouldToggle);
      }
    }
  };

  module.exports = MultiAccordion;
}
