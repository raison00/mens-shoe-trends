/*
 * This Context utility provides unified approach to support multiple flavors of a Polaris project
 * See http://confluence5/display/MCOMUIT/Create+Multiple+Flavors+of+a+Polaris+Project for detailed documentation
 *
 *
 *
 */
module.exports = {
  keys: {},
  add(group, ext, contextObj) {
    if (!group || !ext || !contextObj) {
      throw new Error('context.add(group, extension, requireContext) failed. Missing required arguments');
    }
    if (typeof contextObj !== 'function') {
      throw new Error('context.add(group, extension, requireContextObject) failed. requireContextObj must be of type rquire.context. Please refer to webpack rquire.context.');
    }
    if (typeof this.keys[group] === 'undefined') {
      this.keys[group] = {};
    }
    this.keys[group][ext] = contextObj;
  },
  load(group, file) {
    const extensionObject = /[.]/.exec(file) ? /[^.]+$/.exec(file) : undefined;
    const ext = extensionObject[0];
    if (typeof this.keys[group] === 'undefined') {
      throw new Error(`context.load failed. ${group} has not been added to context`);
    }
    if (ext === undefined) {
      throw new Error(`unable to load file ${file}. Required file extension is missing`);
    }
    return this.keys[group][ext](file);
  },
};
