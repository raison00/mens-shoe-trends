// #MODULE - AddOfferToWallet
// > Author: Sarfaraz Merchant
// >
// > Create Date: April 22, 2015
// >
// ##DESCRIPTION:
// This module should be used to add offers to wallet from NavApp.
//
{
  const $ = require('jquery');
  const Globals = require('./Globals');
  const Logger = require('./Logger');
  const addToWalletUrl = '/account/ocwalletservice/addOffer';
  const data = {
    ocwallet: true, // should be removed once wallet has been refactored from ShoApp and removed from URL.
    ocd: undefined,
  };
  let secureHost;

  // ###Method - add( offerCode )
  // Public method that should be called to add offers to wallet from NavApp.
  // This method returns a promise, promise will reject even when the status is 200 but ShopApp returns an error in status (ADD_OFFER_ERROR).
  //
  // > parameters
  // >
  // + *offerCode* : *String* - Offer code that needs to be added to wallet.
  //
  // > returns
  // >
  // + A Promise.
  function add(offerCode) {
    const deferred = $.Deferred();

    if (!offerCode || typeof offerCode !== 'string') {
      Logger.error('Offer code is not valid. It should be type string.');
      return undefined;
    }

    data.ocd = $.trim(offerCode);

    if (!secureHost) {
      secureHost = Globals.getValue('props.secureHost');
    }

    $.ajax({
      url: secureHost + addToWalletUrl,
      dataType: 'jsonp',
      data,
    })
      .done((...args) => {
        const response = args[0];
        if (response && Object.prototype.hasOwnProperty.call(response, 'status') && response.status === 'ADD_OFFER_SUCCESS') {
          deferred.resolve.apply(null, args);
        } else {
          // this will be taken care even response.status is "ADD_OFFER_ERROR"
          deferred.reject.apply(null, args);
        }
      })
      .fail((...args) => {
        deferred.reject.apply(null, args);
      });

    return deferred.promise();
  }

  module.exports = {
    add,
  };
}
