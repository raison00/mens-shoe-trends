module.exports = (function () {
  // ### toObject - public method to parse a stringified curly brace object or array into an object
  //                  includes trimming bad characters from the front and end of the string
  //                  to help with removing, for example, unwanted semicolons inserted by 3rd parties
  //
  // > parameters
  // >
  // + dataString - *String* String that contains a curly brace object or array
  //                           with or without additional characters at the front and end
  // + wrapper - *String* String that represents the object container of the desired object
  //                        must represent an empty object or array
  //
  // > returns *Object* - either a curly brace object or an array
  //
  function toObject(dataString, wrapper) {
    const stringifiedWrapper = typeof wrapper === 'string' && wrapper === '[]' ? '[]' : '{}';
    if (typeof dataString !== 'string') {
      return JSON.parse(stringifiedWrapper);
    }
    let trimFromFront = 0;
    let trimFromEnd = 0;
    let index = 0;
    let cleanedString = '';
    let result;

    while (index < dataString.length) {
      if (dataString[index] !== stringifiedWrapper[0]) {
        trimFromFront++;
        index++;
      } else {
        index = dataString.length;
      }
    }

    index = dataString.length - 1;
    while (index > 0) {
      if (dataString[index] !== stringifiedWrapper[1]) {
        trimFromEnd++;
        index--;
      } else {
        index = 0;
      }
    }

    cleanedString = trimFromEnd > 0 ? dataString.slice(trimFromFront, dataString.length - trimFromEnd) : dataString.slice(trimFromFront);

    try {
      result = JSON.parse(cleanedString);
    } catch (e) {
      result = JSON.parse(stringifiedWrapper);
    }
    return result;
  }

  return {
    toObject,
  };
}());
