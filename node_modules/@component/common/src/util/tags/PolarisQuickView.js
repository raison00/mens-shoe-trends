module.exports = function (response, brand) {
  const tagManager = require('../TagManagerUtil');
  const ou = require('../ObjectUtil');
  if (response) {
    const data = ou.hasChildProperty(response, 'product.meta.analytics.data') ? response.product.meta.analytics.data : {};
    const detail = ou.hasChildProperty(response, 'product.detail') ? response.product.detail : {};
    const flags = detail.flags || {};
    const utagData = {
      page_type: 'product quickview',
      event_name: 'product quickview',
      product_id: [data.productID || ''],
      product_name: [data.productName || ''],
      order_by_phone: flags.phoneOnly ? 'true' : 'false',
      product_type: [data.productType || ''],
      product_original_price: [data.productOriginalPrice || ''],
      product_price: [data.productPrice || ''],
      is_big_ticket: [data.isBigTicket || 'false'],
      product_position: [response.currentProductPosition ? response.currentProductPosition.toString() : ''],
      product_pricing_state: [data.productPricingState || ''],
      product_rating: [data.productRating || ''],
      product_reviews: [data.productReviews || ''],
      pdp_product_position: [response.index || ''],
      t_category_id: [response.product.identifier.topLevelCategoryID || ''],
      t_category_name: [response.product.detail.typeName || ''],
    };
    if (brand === 'bcom') {
      const productBrand = detail.brand || '';
      const productUrl = ou.hasChildProperty(response, 'product.identifier.productUrl') ? response.product.identifier.productUrl : '';
      const match = productUrl.match('CategoryID=([0-9]*)');
      let categoryId = match && match[1] ? match[1] : '';

      categoryId = flags.registrable && window.location.pathname.indexOf('/shop/wedding-registry/') !== -1 ? `BWEDD_${categoryId}` : categoryId;
      utagData.product_category_id = [categoryId];
      utagData.product_brand = [productBrand];
    }
    tagManager.fireTag('view', utagData);
  }
};
