module.exports = function (response) {
  const tagManager = require('../TagManagerUtil');
  if (response) {
    let subtotal;
    let price = response.salePrice ? response.salePrice.replace(/,/g, '') : '';
    let quantity = response.quantity ? response.quantity.toString() : '';
    const registryId = response.registry ? response.registry.registryID : '';
    const utagData = {
      event_name: 'bag update',
      product_category_id: [response.categoryID],
      product_category_name: [response.typeName],
      product_color: [response.color],
      product_id: response.productID ? [response.productID.toString()] : [],
      product_name: [response.productName],
      product_original_price: response.origPrice ? [response.origPrice.replace(/,/g, '')] : [],
      product_price: [price],
      product_quantity: response.quantity ? [response.quantity.toString()] : [],
      product_registry_number: registryId ? [registryId.toString()] : [],
      product_size: [response.size],
      product_upc: response.upcNumber ? [response.upcNumber.toString()] : [],
    };
    if (response.prevQuantity) {
      utagData.product_prev_quantity = [response.prevQuantity ? response.prevQuantity.toString() : ''];
    }
    if (price !== '' && quantity !== '') {
      price = parseFloat(price);
      quantity = parseInt(quantity, 10);
      if (!Number.isNaN(Number(price)) && !Number.isNaN(Number(quantity))) {
        subtotal = price * quantity;
        utagData.product_sub_total = [subtotal.toString()];
      }
    }

    tagManager.fireTag('link', utagData);
  }
};
