// #MODULE - MapCache
// > Author: Michael Moir
// > Create Date: December 13, 2013
//
// ##DESCRIPTION:
// A simple hash map module.
// Fallback caching object if browser doesn't support sessionStorage
// ex: var cache = window.sessionStorage || MapCache;
{
  function self() {
    let _cache = {};
    const getLength = function (test) {
      if (!Object.keys || test) {
        let count = 0;
        Object.keys(_cache).forEach((k) => {
          if (Object.prototype.hasOwnProperty.call(_cache, k)) {
            count += 1;
          }
        });
        return count;
      }
      return Object.keys(_cache).length;
    };

    this.setItem = function (key, value) {
      _cache[key] = value;
      return true;
    };

    // #Method: getItem
    // Will return the value of 'key' if found, or will return a blank string if not found
    this.getItem = function (key) {
      return _cache[key] || '';
    };

    this.clear = function () {
      _cache = {};
    };
    this.removeItem = function (key) {
      delete _cache[key];
    };
    this.getLength = getLength;
    this.length = function () {
      return getLength();
    };
  }
  module.exports = self;
}
