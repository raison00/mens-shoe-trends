// #MODULE - Browser
// > Authors: Sarfaraz Merchant
// >
// > Create Date: July, 2013
// >
// ##DESCRIPTION: This module can be used to get browser information from userAgent string.
//
{
  // ###Method - get ( navigator )
  // Public method to get browser and OS info from user agent string
  //
  // > parameters
  // >
  // + *navigator* : *window.navigator* - Optional: Adding this as parameter just for writing test cases.
  //
  // > returns
  // >
  // + *self* : *Object* - Object containing browser and OS information
  //
  const get = function (navigator) {
    const self = {};
    const nav = navigator || window.navigator;
    let result;

    // array of browser that we need to test in user agent string
    const browser = [
      {
        search: 'msie',
        name: 'ie',
        version: 'msie',
      },
      {
        search: 'trident/7.0',
        name: 'ie',
        version: 'rv',
      },
      {
        search: 'edge',
        name: 'edge',
        version: 'edge',
      },
      {
        search: 'firefox',
        name: 'ff',
        version: 'firefox',
      },
      {
        search: 'chrome',
        name: 'chrome',
        version: 'chrome',
      },
      {
        search: 'safari',
        name: 'safari',
        version: 'version',
      },
    ];

    // array of OS that we need to test in user agent string
    const os = [
      {
        search: 'windows nt',
        name: 'win',
        version: 'windows nt',
      },
      {
        search: 'windows',
        name: 'win',
        version: 'windows',
      },
      {
        search: 'android',
        name: 'android',
        version: 'android',
      },
      {
        search: 'ipod',
        name: 'ipod',
        version: 'iphone os',
      },
      {
        search: 'iphone',
        name: 'iphone',
        version: 'iphone os',
      },
      {
        search: 'ipad',
        name: 'ipad',
        version: 'cpu os',
      },
      {
        search: 'macintosh',
        name: 'mac',
        version: 'mac os x',
      },
      {
        search: 'cros',
        name: 'chromeOS',
        version: 'cros i686',
      },
      {
        search: 'linux',
        name: 'linux',
        version: 'linux',
      },
    ];

    self.browser = '';
    self.browserVersion = '';
    self.os = '';
    self.osVersion = '';
    self.userAgent = nav.userAgent;

    const uaCleaned = self.userAgent.toLowerCase().replace(/_/, '.');

    // ###Method - parse ( map )
    // Private method to loop through the browser and os array
    //
    // > parameters
    // >
    // + *map* : *Array* - List of browsers or OS to match against user agent string
    //
    // > returns
    // >
    // + *anonymous* : *Object* - Object containing browser or OS infromation based on passed array
    //
    const parse = function (map) {
      let name;
      let version;
      let search;
      let idx = -1;
      let i;
      const uaString = uaCleaned;

      const ilen = map.length;
      for (i = 0; i < ilen; i += 1) {
        search = map[i].search;
        if (uaString.lastIndexOf(search) !== -1) {
          name = !name ? map[i].name : name;
          idx = uaString.indexOf(search) + search.length + 1;
          version = parseFloat(uaString.substr(idx), 10);
          if (map[i].search !== map[i].version) {
            idx = uaString.indexOf(map[i].version) + map[i].version.length + 1;
            version = parseFloat(uaString.substr(idx), 10);
          }
          if (version) {
            break;
          }
        }
      }
      return {
        name,
        version,
      };
    };

    result = parse(browser);
    self.browser = result.name;
    self.browserVersion = result.version;

    result = parse(os);
    self.os = result.name;
    self.osVersion = result.version;

    return self;
  };

  module.exports = {
    get,
  };
}
