 /*
	In order to use custom radio/Check boxes, pages should add class "cRnCe" to <html> tag
*/

.cRnCe input[type='radio'],
.cRnCe input[type='checkbox'] {
	-webkit-appearance: none;
	-moz-appearance: none;
	-o-appearance: none;
	appearance: none;
	margin: 0;
	padding: 0;
}

input[type='radio'].bl_customized,
input[type='checkbox'].bl_customized {
	position: absolute;
	left: -10000px;
}

input[type='radio'] + .bl_inputCover,
.cRnCe input[type='radio'],
input[type='checkbox'] + .bl_inputCover,
.cRnCe input[type='checkbox'] {
	display: inline-block;
	position: relative;
	width: rem-calc(20);
	height: rem-calc(20);
	border: 1px solid $bloomiesGrey3;
	background: $bloomiesWhite;
	@if $input-include-glowing-effect {
		@if $experimental {
			-webkit-transition: -webkit-box-shadow $glowing-effect-fade-time, border-color $glowing-effect-fade-time ease-in-out;
			-moz-transition: -moz-box-shadow $glowing-effect-fade-time, border-color $glowing-effect-fade-time ease-in-out;
		}
		transition: box-shadow $glowing-effect-fade-time, border-color $glowing-effect-fade-time ease-in-out;
	}
	& ~ label {
		display: inline-block;
		line-height: rem-calc(20);
		margin-left: rem-calc(7);
		vertical-align: top;
	}
}
input[type='radio']:focus + .bl_inputCover,
.cRnCe input[type='radio']:focus,
input[type='checkbox']:focus + .bl_inputCover,
.cRnCe input[type='checkbox']:focus {
	@if $experimental {
		-webkit-box-shadow: 0 0 5px $glowing-effect-color;
		-moz-box-shadow: 0 0 5px $glowing-effect-color;
	}
	box-shadow: 0 0 5px $glowing-effect-color;
	border-color: $glowing-effect-color;
}

input[type='radio'] + .bl_inputCover,
.cRnCe input[type='radio'] {
	@if $experimental {
		-webkit-border-radius: 50%;
		-moz-border-radius: 50%;
		-o-border-radius: 50%;
	}
	border-radius: 50%;
}

input[type='radio']:checked + .bl_inputCover, .cRnCe input[type='radio']:checked {
	background-image: url(svg-inline("<svg width='10px' height='10px'><circle fill='black' cx='5' cy='5' r='5'/></svg>"));
	background-repeat: no-repeat;
	background-position: 4px 4px;
}

input[type='checkbox']:checked + .bl_inputCover, .cRnCe input[type='checkbox']:checked {
	background-image: url(svg-inline("<svg width='14px' height='12px'><polygon points='13.75,1.833 11.423,0.125 5.548,7.31 2.453,4.523 0.25,6.369 5.6,11.875'/></svg>"));
	background-repeat: no-repeat;
	background-position: 2px 3px;
}

input[type='radio'][disabled] + .bl_inputCover, .cRnCe input[type='radio'][disabled] {
	background: $bloomiesGrey8;
}

input[type='radio'][disabled]:checked + .bl_inputCover, .cRnCe input[type='radio'][disabled]:checked {
	background-image: url(svg-inline("<svg width='10px' height='10px'><circle fill='rgb(153,153,153)' cx='5' cy='5' r='5'/></svg>"));
	background-repeat: no-repeat;
	background-position: 4px 4px;
}

input[type='checkbox'][disabled] + .bl_inputCover, .cRnCe input[type='checkbox'][disabled] {
	background: $bloomiesGrey8;
}

input[type='checkbox'][disabled]:checked + .bl_inputCover, .cRnCe input[type='checkbox'][disabled]:checked {
	background-image: url(svg-inline("<svg width='14px' height='12px'><polygon fill='rgb(153,153,153)' points='13.75,1.833 11.423,0.125 5.548,7.31 2.453,4.523 0.25,6.369 5.6,11.875'/></svg>"));
	background-repeat: no-repeat;
	background-position: 2px 3px;
}

.forceRepaint {
	display: none !important;
}
