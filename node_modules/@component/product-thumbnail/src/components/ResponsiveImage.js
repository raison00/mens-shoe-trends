// #MODULE - Responsive Image
// > Author: Michael Moir
// > Migrate: Balasubramanian Karthikesan
// > Create Date: Dec 30, 2016
//
// ##DESCRIPTION:
// make an Image be responsive...depends on the image using Scene7 URL pattern

import $ from 'jquery';

const regExKey = /wid=([^&]*)/;

// ###Method - setWidth
// This is a private method to this module that can be used to modify the resulting width of the image per a breakpoint.
// We may wish to vary the width per breakpoint because smaller screen sizes need smaller resolution proportionate to the size.
// Right now, it is just returning the breakpoint.
function setWidth(breakPoint) {
  return breakPoint;
}

// ###Method - makeResponsive
// This function will take in a collection of Imgs (jquery) and will loop through them, adding the
// srcset attribute to each one.  The srcset attribute will be derived from the "src" attr, and will depend
// on the Scene7 URL pattern.  Most importantly, it expects the "wid=" parameter in the src querystring to adjust the
// widths.
//
// > parameters
// >
// + imageMapCollection - a jQuery collection of images to apply the resposiveness to
// + breakPoints (optional) - provide a custom breakPoints array to override the default one
//
// > returns
// >
// + Nothing.
function makeResponsive(imageMapCollection, breakPoints = [], sizeSet = []) {
  let src;
  let srcsetStr;

  breakPoints.push(640, 800, 1024);
  sizeSet.push(640, 800, 1024);

  // STEP: If browser supports srcset feature, then we proceed with filling in attribute
  // NOTE ON THE ABOVE AND THE COMMENT BELOW...perhaps we don;t care if the browser supports srcset...it shouldn't hurt to add it anyway
  // if ( ( 'srcset' in im && 'sizes' in im ) || bForce) {
  $(imageMapCollection).each((idx, obj) => {
    const $this = $(obj);
    src = $this.attr('src');
    if (src.indexOf('wid=')) {
      srcsetStr = '';
      for (let i = 0; i < breakPoints.length; i += 1) {
        srcsetStr += `${(i > 0 ? ',' : '') + src.replace(regExKey, `wid=${setWidth(sizeSet[i])}`)} ${breakPoints[i]}w `;
      }
      $this.attr('srcset', srcsetStr);
    }
  });
  // }
}

// STEP: Now return the module, which exposed the public methods.
export default {
  makeImageResponsive: makeResponsive,
};
