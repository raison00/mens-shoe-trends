const _ = require('lodash');
const cp = require('child-process-promise');

module.exports = {
  // exec will NOT output anything to the console
  // will not preserve colors (caller must add --color flag to cmd)
  exec: (cmd, options) => cp.exec(cmd, options),

  spawn: (cmd, args, options) =>
    cp.spawn(cmd, args, _.extend({ stdio: 'inherit' }, options)), // stdio: inherit to preserve colors

  // The below lines are necessary for all cases other than stdio: inherit, to output to the console
  // promise.childProcess.stdout.on('data', data => process.stdout.write(data.toString()))
  // promise.childProcess.stderr.on('data', data => process.stdout.write(data.toString()))

  fork: (cmd, args, options) =>
    cp.fork(cmd, args, _.extend({ stdio: 'inherit' }, options)), // stdio: inherit to preserve colors

  // The below lines are necessary for all cases other than stdio: inherit, to output to the console
  // promise.childProcess.stdout.on('data', data => process.stdout.write(data.toString()))
  // promise.childProcess.stderr.on('data', data => process.stdout.write(data.toString()))
};
