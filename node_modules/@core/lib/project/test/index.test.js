import _ from 'lodash';
import test from 'ava';
import m from '..';

test('project should export a function', (t) => {
  t.is(typeof m, 'function');
});

test('when called, project should export an object of controlled interfaces', (t) => {
  const project = m();

  t.true(_.isEqual(Object.keys(project), [
    'name',
    'pkg',
    'type',
    'outputPath',
    'publicPath',
    'resolve',
    'modules',
  ]));

  t.true(_.isString(project.name));
  t.true(_.isObject(project.pkg));
  t.true(_.isString(project.type));
  t.true(_.isFunction(project.outputPath));
  t.true(_.isFunction(project.publicPath));
  t.true(_.isFunction(project.resolve));
  t.true(_.isArray(project.modules));
});
