module.exports = function (isProduction, appName, channel, mode, nonce, opts) {
  if (arguments.length < 5) {
    throw new TypeError('Missing required arguments for the CSP policy');
  }
  if (typeof isProduction !== 'boolean') {
    throw new Error('getContentSecurityPolicy Error ::  isProduction argument must be true or false');
  }
  if (appName === 'undefined') {
    throw new Error('getContentSecurityPolicy Error :: appName need to be defined');
  }
  if (!(channel === 'mcom' || channel === 'bcom' || channel === 'mcombcom')) {
    throw new Error('channel should be either mcom , bcom or mcombcom');
  }
  if (!(mode === 'reportonly' || mode === 'enforce')) {
    throw new Error('Mode should be either either reportonly or enforce');
  }
  if (nonce === 'disable_nonce' || nonce === 'disable-nonce') {
    nonce = ' '; // eslint-disable-line no-param-reassign
  }
  const optional = opts || false;
  const key = isProduction ? 'PROD' : 'NONPROD';

  const rasmUrlParam = (`${channel}_${appName}_${mode}`).toLowerCase();

  let reportOnlyFlag = false;
  if (mode.toLowerCase() === 'reportonly') {
    reportOnlyFlag = true;
  }

  const rasmUri = isProduction ? 'https://rasm.macys.net/app/'.concat(rasmUrlParam).concat('/env/production/dc/RTP') : 'https://rasm.macys.net/app/'.concat(rasmUrlParam).concat('/env/qa/dc/RTP');

  const commonScriptSrc = ["'self'", '*.btstatic.com', '*.thebrighttag.com', '*.brightcove.net', '*.bazaarvoice.com', '*.akamaihd.net', '*.coremetrics.com'];
  const scriptSrc = {
    PROD: ['*.macys.com'],
    NONPROD: ['*.fds.com', '*.fdsassets.com'],
  };
  const commonStyleSrc = ["'self'", '*.akamaihd.net'];
  const styleSrc = {
    PROD: ['*.macys.com'],
    NONPROD: ['*.fds.com', '*.fdsassets.com'],
  };
  const commonImgSrc = ["'self'", '*.coremetrics.com', '*.akamaihd.net', 'data:'];
  const imgSrc = {
    PROD: ['*.macys.com'],
    NONPROD: ['*.fds.com', '*.fdsassets.com'],
  };
  const commonFontSrc = ["'self'", '*.akamaihd.net', '*.amazonaws.com'];
  const commonConnectSrc = ["'self'", '*.omtrdc.net', '*.akamaihd.net'];
  const optionalScriptSrc = optional ? optional.scriptSrc || [] : [];
  const optionalStyleSrc = optional ? optional.styleSrc || [] : [];
  const optionalFontSrc = optional ? optional.fontSrc || [] : [];
  const optionalImgSrc = optional ? optional.imgSrc || [] : [];
  const optionalConnectSrc = optional ? optional.connectSrc || [] : [];

  return {
    directives: {
      defaultSrc: ['*'],
      scriptSrc: commonScriptSrc.concat(scriptSrc[key]).concat(optionalScriptSrc).concat(nonce),
      styleSrc: commonStyleSrc.concat(styleSrc[key]).concat(optionalStyleSrc).concat(nonce),
      fontSrc: commonFontSrc.concat(optionalFontSrc),
      imgSrc: commonImgSrc.concat(imgSrc[key]).concat(optionalImgSrc),
      connectSrc: commonConnectSrc.concat(optionalConnectSrc),
      reportUri: rasmUri,
      upgradeInsecureRequests: true,
    },
    loose: false,
    reportOnly: reportOnlyFlag,
    setAllHeaders: false,
    disableAndroid: true,
    browserSniff: true,
  };
};
