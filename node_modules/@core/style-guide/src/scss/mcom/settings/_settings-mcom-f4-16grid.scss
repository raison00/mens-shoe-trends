// These are the comments for DSS
// By running `grunt dss`, these get parsed into a json file,
// which is then imported to ui-standards.herokuapp.com
// ======================================================================================

/**
  * @name Foundation Components
  * @section Foundation
  * @disableCodeSample
  * @sectionIntro
    All foundation(4.x) css components, that are not already included in macys-base,  are available to use at the feature level, they will need to be imported at feature level via scss. Refer to <code>/src/mcom/features/ui-styleguide/styleguide.scss</code> for an example of how button group component is imported.
  *
  */

  /**
  * @name Grid
  * @section Foundation
  * @description Grids divide horizontal space into indivislbe units called 'columns'.  Macys.com CSG is built on a vertical 16-column grid.  Column widths are defined as a percentage of their parent width. It is based on Foundation's mobile-first design, so please use to .small class as your default size. If you know that your grid structure will be the same for small devices as it will be on large devices, just use the small grid. <br> Rows are groups of columns which are aligned horizontally.  Rows can either be explicit, by adding a row class, or implicit, automatically occuring when no more space is left in a previous row.  After each group of columns, vertical spacing is added to separate each group of columns to create verticla rhythm. <br>  See <a target="_blank" href="http://foundation.zurb.com/sites/docs/v/4.3.2/components/grid.html">Foundation 4.3.2 Grid Documentation</a> for additional options on grids.


  * @markup
      <div class="sample_csg_grid_demo">
        <div class="row">
          <div class="small-16 small-centered columns"> <-----     This is a 16-column grid row     ----> </div>
          <div class="small-1 columns">1</div>
          <div class="small-1 columns">2</div>
          <div class="small-1 columns">3</div>
          <div class="small-1 columns">4</div>
          <div class="small-1 columns">5</div>
          <div class="small-1 columns">6</div>
          <div class="small-1 columns">7</div>
          <div class="small-1 columns">8</div>
          <div class="small-1 columns">9</div>
          <div class="small-1 columns">10</div>
          <div class="small-1 columns">11</div>
          <div class="small-1 columns">12</div>
          <div class="small-1 columns">13</div>
          <div class="small-1 columns">14</div>
          <div class="small-1 columns">15</div>
          <div class="small-1 columns">16</div>
        </div>
        <div class="row">
          <div class="small-4 columns">small-4</div>
          <div class="small-6 columns">small-6</div>
          <div class="small-6 columns">small-6</div>
        </div>
        <div class="row">
          <div class="small-3 columns">small-3</div>
          <div class="small-10 columns">small-10</div>
          <div class="small-3 columns">small-3</div>
        </div>
        <div class="row">
          <br/>
          <p>Specify small, medium, and/or large sizes if you want responsive displays; the styles from the largest size specified will propagate up. You can override your small grid classes by adding large or medium grid classes to it.</p>
          <div class="small-16 medium-4 columns">small-16 medium-4</div>
          <div class="small-16 medium-8 columns">small-16 medium-8</div>
          <div class="small-16 medium-4 columns">small-16 medium-4</div>
        </div>
        <div class="row">
          <div class="small-4 large-8 columns">small-4 large-8</div>
          <div class="small-12 large-8 columns">small-12 large-8</div>
        </div>
        <div class="row">
          <br/>
          <p>Offsets allow you to create additional space between columns in a row.</p>
          <div class="small-6 columns">small-6</div>
          <div class="small-10 columns">small-10</div>
        </div>
        <div class="row">
          <div class="small-6 columns">small-6</div>
          <div class="small-8 small-offset-2 columns">small-8, offset 2</div>
        </div>
        <div class="row">
          <div class="small-6 columns">small-6</div>
          <div class="small-6 small-offset-4 columns">small-6, offset 4</div>
        </div>
        <div class="row">
          <br/>
          <p>Centered columns are placed in the middle of the row. This does not center their content, but centers the grid element, itself.  You can center any number of columns you have. To have a column not carry it's small-centered to large, add a class of large-uncentered</p>
          <div class="small-4 small-centered large-uncentered columns">small-4 centered / large-uncentered</div>
        </div>
        <div class="row">
          <div class="small-12 small-centered large-8 large-uncentered columns">small-12 centered/ large-8 uncentered</div>
          <div class="small-10 small-centered large-8 large-uncentered columns">small-10 centered/ large-8 uncentered</div>
        </div>
      </div>

  *  <br/>
  *   <p></p>
  *
  */

  /**
  * @name Block Grid
  * @section Foundation
  * @description Block grids split contents of a list evenly within the grid.  It calculates the spacing between the contents automatically so that is stays evenly spaced no matter the screeen size.
  * @markup
      <ul class="small-block-grid-2 large-block-grid-4">
        <li><div class="csg-block-grid-demo">Content 1</div></li>
        <li><div class="csg-block-grid-demo">Content 2</div></li>
        <li><div class="csg-block-grid-demo">Content 3</div></li>
        <li><div class="csg-block-grid-demo">Content 4</div></li>
        <li><div class="csg-block-grid-demo">Content 5</div></li>
        <li><div class="csg-block-grid-demo">Content 6</div></li>
        <li><div class="csg-block-grid-demo">Content 7</div></li>
        <li><div class="csg-block-grid-demo">Content 8</div></li>
      </ul>
  *   <p></p>
  *
  */
//
// Foundation Variables
//
// (modified with Macys.com Settings)
// _macys-overrides.scss and _variables.scss have been consolidated here  (14K, September 2014)






// emCalc functions
// inherit from Foundation

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with browser-based text zoom or user-set defaults.

$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
$base-line-height: 150% !default;

// This is the default html and body font-size for the base em value.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be a different size and not have it effect grid size too,
// set the value of $em-base to $base-font-size ($em-base: $base-font-size;)
$em-base: 16px !default;
$rem-base: 16px !default;
$ie8: false !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

// Converts "px" to "em" using the ($)em-base
@function convert-to-em($value, $base-value: $em-base) {
    $value: strip-unit($value) / strip-unit($base-value) * 1em;
    @if $value == 0em { $value: 0; } // Turn 0em into 0
    @return $value;
}

// Working in ems is annoying. Think in pixels by using this handy function, em-calc(#)
// Just enter the number, no need to mention "px"
@function em-calc($values, $base-value: $em-base) {
    $max: length($values);
    // Get the total number of parameters passed
    // If there is only 1 parameter, then return it as an integer.
    // This is done because a list can't be multiplied or divided even if it contains a single value
    @if $max == 1 {
        @return convert-to-em(nth($values, 1), $base-value);
    }
    $emValues: ();
    // This will eventually store the converted $values in a list
    @for $i from 1 through $max {
        $emValues: append($emValues, convert-to-em(nth($values, $i), $base-value));
    }
    @return $emValues;
}

//Retaining this for backward compatability

@function emCalc($pxWidth) {
  @return $pxWidth / $em-base * 1em;
}

// Conversion function to get the pixel value (IE8 Compatible against rem units)

@function convert-to-pix($value) {
    $value: strip-unit($value);
    $value: $value * 1px;
    @if $value == 0px {
        $value: 0;
    }
    @return $value;
}

// Conversion function to get value in rem units.

@function convert-to-rem($pxWidth) {
    $pxWidth: strip-unit($pxWidth) / strip-unit($rem-base) * 1rem;
    // To get 0 incase of 0px or 0em.
    @if $pxWidth == 0rem {
        $pxWidth: 0;
    }
    @return $pxWidth;
}

// Conversion function to get style declaration values in rem units.
// Value can be one or more with suffix "px" or without px.
// ex: margin : rem-calc(2 2px 3 -3);      rem-calc(3px)

@function rem-calc($values) {
    $max: length($values);
    // Incase of $ie8 flag is set to true.
    @if $ie8 {
        @if $max == 1 {
            @return convert-to-pix($values);
        }
        // to allow multi values for IE8.
        $pixValues: ();
        @for $i from 1 through $max {
            $pixValues: append($pixValues, convert-to-pix(nth($values, $i)));
        }
        @return $pixValues;
    }
    // Incase $ie8 is not set as true;
    @if $max == 1 {
        @return convert-to-rem(nth($values, 1));
    }
    $remValues: ();
    @for $i from 1 through $max {
        $remValues: append($remValues, convert-to-rem(nth($values, $i)));
    }
    @return $remValues;
}

// Font-smoothing
// $font-smoothing: subpixel-antialiased !default;


// Text direction settings
$text-direction: ltr !default;

// NOTE: No need to change this conditional statement, $text-direction variable controls it all.
$default-float: left !default;
$opposite-direction: right !default;

@if $text-direction == ltr {
    $default-float: left;
    $opposite-direction: right;
}
@else {
    $default-float: right;
    $opposite-direction: left;
}

$default-float: left;



// Colors
//= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
//= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
//@name Colors
//@section Colors
//@sectionIntro Macys.com Corporate color palette, reference only.
//@notes There are no associated class names to render color swatches. Code sample has been omitted.
//@disableCodeSample
//@markup
//  <h3> Primary Brand Colors </h3>
//  <ul class="large-block-grid-4 small-block-grid-2 text-center">
//  <li class="swatch"><div class="macysRed"><div><p>macysRed</p><p>#cc0000</p></div></div></li>
//  <li class="swatch"><div class="macysRedHover"><div><p>macysRedHover</p><p>#af0000</p></div></li>
//  <li class="swatch"><div class="macysBlack"><div><p>macysBlack</p><p>#000000</p></div></div></li>
//  <li class="swatch"><div class="macysGrey1"><div><p>macysGrey1</p><p>#333333</p></div></div></li>
//  <li class="swatch"><div class="macysGrey2"><div><p>macysGrey2</p><p>#666666</p></div></div></li>
//  <li class="swatch"><div class="macysGrey3"><div><p>macysGrey3</p><p>#999999</p></div></div></li>
//  <li class="swatch"><div class="macysGrey4"><div><p>macysGrey4</p><p>#b4b4b4</p></div></div></li>
//  <li class="swatch"><div class="macysGrey5"><div><p>macysGrey5</p><p>#cccccc</p></div></div></li>
//  <li class="swatch"><div class="macysGrey6"><div><p>macysGrey6</p><p>#eeeeee</p></div></div></li>
//  <li class="swatch"><div class="macysWhite with_border"><div class="no_border"><p>macysWhite</p><p>#ffffff</p></div></div></li>
//  </ul>
//  <h3> Secondary Brand Colors </h3>
//  <ul class="large-block-grid-4 small-block-grid-2 text-center">
//  <li class="swatch"><div class="plentiPrimary"><div><p>plentiPrimary</p><p>#273691</p></div></div></li>
//  <li class="swatch"><div class="registry"><div><p>registry</p><p>#970842</p></div></div></li>
//  </ul>
//  <h3> Notification Colors </h3>
//  <ul class="large-block-grid-4 small-block-grid-2 text-center">
//  <li class="swatch"><div class="macysError"><div><p>macysError</p><p>#e80709</p></div></div></li>
//  <li class="swatch"><div class="macysErrorSecondary"><div><p>macysErrorSecondary</p><p>#ffc9c9</p></div></div></li>
//  <li class="swatch"><div class="macysErrorTertiary"><div><p>macysErrorTertiary</p><p>#ffe3e3</p></div></div></li>
//  <li class="swatch"><div class="macysWarning"><div><p>macysWarning</p><p>#e67700</p></div></div></li>
//  <li class="swatch"><div class="macysWarningSecondary"><div><p>macysWarningSecondary</p><p>#ffec99</p></div></div></li>
//  <li class="swatch"><div class="macysWarningTertiary"><div><p>macysWarningTertiary</p><p>#fff3bf</p></div></div></li>
//  <li class="swatch"><div class="macysValidation"><div><p>macysValidation</p><p>#09863f</p></div></div></li>
//  <li class="swatch"><div class="macysValidationSecondary"><div><p>macysValidationSecondary</p><p>#b2f2bb</p></div></div></li>
//  <li class="swatch"><div class="macysValidationTertiary"><div><p>macysValidationTertiary</p><p>#d3f9d8</p></div></div></li>
//  <li class="swatch"><div class="macysInfo"><div><p>macysInfo</p><p>#374ea0</p></div></div></li>
//  <li class="swatch"><div class="macysInfoSecondary"><div><p>macysInfoSecondary</p><p>#ccedff</p></div></div></li>
//  <li class="swatch"><div class="macysInfoTertiary"><div><p>macysInfoTertiary</p><p>#e8f7ff</p></div></div></li>
//  </ul>


// @section Colors
// @disableCodeSample
// @ux
// Additional UX Guidelines
// @markup
// Macys.com Corporate color palette, reference only. For details, see <strong><a class="button small secondary" href="http://uxmacys/standards/colors/">UX + Creative colors documentation</a></strong>



// ==================================================================================================
// ================  MACYS COLOR (BRANDING, CREATIVE NAMING CONVENTION) =============================
// ==================================================================================================
// Note: These should only be used when defining variables in _settings.scss
//       DO NOT use these variable in code.
// You should use the color variable in next section in code, ex: $primary-color, $alert-color..etc.
// Last updated: August 8, 2014 by Kristine Lai

// Primary Brand Colors
$macysRed: #cc0000;
$macysDarkRed: #940b40;
$macysRedHover: #af0000;
$macysBlack: #000;
$macysGrey1: #333;
$macysGrey2: #666;
$macysGrey3: #999;
$macysGrey4: #b4b4b4;
$macysGrey5: #ccc;
$macysGrey6: #eee;
$macysWhite: #fff;

// Notification colors
// Primary (default) - icons or fonts
// Secondary - accent or border
// Tertiary - background 
$macysError: #e80709;     
$macysErrorSecondary: #ffc9c9;
$macysErrorTertiary: #ffe3e3;
$macysWarning: #e67700; //#f29a1c;
$macysWarningSecondary: #ffec99;
$macysWarningTertiary: #fff3bf; //#fffbdd;  // background
$macysValidation: #09863f;
$macysValidationSecondary: #b2f2bb;
$macysValidationTertiary: #d3f9d8;
$macysInfo: #374ea0;
$macysInfoSecondary: #ccedff;
$macysInfoTertiary: #e8f7ff;


// Secondary Brand Colors
$plentiPrimary: #273691;
$registry: #970842;


// feature-level colors:  (naming with $feature-featureName-purpose )

$feature-registry-appointment-hd-color: #a75198;
$feature-registry-appointment-bg-color: #dcb9d7;
$feature-registry-thank-you-bg-color : #d3a8cb;


// page-level colors: (naming with $page-pageName-purpose)
$page-star-rewards-main-color: #a0a0a3;
$page-star-rewards-silver-tier-color: #a0a0a3;
$page-star-rewards-gold-tier-color: #c5a355;
$page-star-rewards-platinum-tier-color: #667479;

// ==================================================================================================
// ==================================================================================================

// deprecated variables  //////////////////////////////
// for backward compatibility support only           //
$macysWarning-background: $macysWarningTertiary;    //
// DO NOT use                                        //
///////////////////////////////////////////////////////

$alert-color: $macysError;
$warning-color: $macysWarning;
$success-color: $macysValidation;

// disabled color no longer using just one global color - will start using 40% opacity of the inheritning colors
// use sass function lighten($color-name, $global-disabled-color-opacity)
$global-disabled-color-opacity: 0.4;

// NEED TO CLEAN THESE UP  >>>>>>>>>>>>
$global-disabled-font-color: $macysGrey3; //#999;
$global-disabled-bg-color: $macysGrey6; //#eee;
$global-disabled-border-color: $macysGrey5; //#ccc

$disabled-color: $global-disabled-bg-color;
$disabled-color-end: $global-disabled-bg-color !default;  //-end are for gradients
// <<<<<<<<<<<NEED TO CLEAN THESE UP  ^^^^^^^^^^^^^^^^^

$primary-color: $macysRed; //#c00
$primary-color-active: $macysRedHover;  //#af0000
$primary-color-disabled: lighten($primary-color, 0.4);
$primary-font-color: $macysWhite;

$secondary-color: $macysGrey6; //#eee;
$secondary-color-active: $macysGrey5; //#ccc;
$secondary-color-disabled: lighten($secondary-color, 0.4);
$secondary-font-color: $macysGrey1;

$tertiary-color: $macysGrey1;  //#333;
$tertiary-color-active: $macysBlack;
$tertiary-color-disabled: lighten($tertiary-color, 0.4);

$textlink-font-color: $macysGrey1; //#333;
$textlink-font-color-active: $macysBlack;//#000;
$textlink-font-weight-tiny: 700;



// DOM Elements Styling
//= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
//= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =


// Make sure border radius matches unless we want it different.

$global-radius: 3px;  //not in em's to preserve the radius styles
// $global-rounded: 1000px;


// Inset shadow shiny edges and depressions.

// $shiny-edge-size: 0 1px 0;
// $shiny-edge-color: rgba(#fff, .5);
// $shiny-edge-active-color: rgba(#000, .2);


// Control whether or not CSS classes come through in the CSS files.

$include-html-classes: true;
$include-print-styles: true;
$include-html-global-classes: $include-html-classes;
// $include-html-type-classes: $include-html-classes;
// $include-html-grid-classes: $include-html-classes;
// $include-html-visibility-classes: $include-html-classes;
// $include-html-button-classes: $include-html-classes;
// $include-html-form-classes: $include-html-classes;
// $include-html-custom-form-classes: $include-html-classes;
// $include-html-media-classes: $include-html-classes;
// $include-html-section-classes: $include-html-classes;
// $include-html-orbit-classes: $include-html-classes;
// $include-html-reveal-classes: $include-html-classes;
// $include-html-joyride-classes: $include-html-classes;
// $include-html-clearing-classes: $include-html-classes;
// $include-html-alert-classes: $include-html-classes;
// $include-html-nav-classes: $include-html-classes;
// $include-html-label-classes: $include-html-classes;
// $include-html-panel-classes: $include-html-classes;
// $include-html-pricing-classes: $include-html-classes;
// $include-html-progress-classes: $include-html-classes;
// $include-html-magellan-classes: $include-html-classes;
// $include-html-tooltip-classes: $include-html-classes;


//
// Block Grid Variables
//= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
//= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =


// Maximum number of block grid elements per row

$block-grid-elements: 16 !default;
$block-grid-default-spacing: 10px !default;

// Enables media queries for block-grid classes. Set to false if writing semantic HTML.

$block-grid-media-queries: true;


//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;

//global sprite location
$global-sprite: "/web20/assets/img/nav/global-icons.png";

//global logo location
$global-logo: "/web20/assets/img/nav/top_navigation_macys_logo.svg";

//global macys.com page width
$page-width: 914px;



// Various Global Styles
//= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
//= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

$body-bg: $macysWhite !default;
$body-font-color: $macysGrey1 !default;
$body-font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;




// Global Foundation Mixins
//

$experimental: true !default;

// We use this to control border radius.
@mixin radius($radius: $global-radius) {
    @if $radius {
        @if $experimental {
            -webkit-border-radius: $radius;
        }
        border-radius: $radius;
    }
}

// We use this to create equal side border radius on elements.
@mixin side-radius($side, $radius) {
    @if $side == left {
        @if $experimental {
            -moz-border-radius-bottomleft: $radius;
            -moz-border-radius-topleft: $radius;
            -webkit-border-bottom-left-radius: $radius;
            -webkit-border-top-left-radius: $radius;
        }
        border-bottom-left-radius: $radius;
        border-top-left-radius: $radius;
    }
    @else if $side == right {
        @if $experimental {
            -moz-border-radius-topright: $radius;
            -moz-border-radius-bottomright: $radius;
            -webkit-border-top-right-radius: $radius;
            -webkit-border-bottom-right-radius: $radius;
        }
        border-top-right-radius: $radius;
        border-bottom-right-radius: $radius;
    }
    @else if $side == top {
        @if $experimental {
            -moz-border-radius-topright: $radius;
            -moz-border-radius-topleft: $radius;
            -webkit-border-top-right-radius: $radius;
            -webkit-border-top-left-radius: $radius;
        }
        border-top-right-radius: $radius;
        border-top-left-radius: $radius;
    }
    @else if $side == bottom {
        @if $experimental {
            -moz-border-radius-bottomright: $radius;
            -moz-border-radius-bottomleft: $radius;
            -webkit-border-bottom-right-radius: $radius;
            -webkit-border-bottom-left-radius: $radius;
        }
        border-bottom-right-radius: $radius;
        border-bottom-left-radius: $radius;
    }
}

// We can control whether or not we have inset shadows edges.
@mixin inset-shadow($active: true) {
    @if $experimental {
        -webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
    }
    box-shadow: $shiny-edge-size $shiny-edge-color inset;
    @if $active {
        &:active {
            @if $experimental {
                -webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
            }
            box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
        }
    }
}

// We use this to add transitions to elements
@mixin single-transition($property: all, $speed: 300ms, $ease: ease-out) {
    @if $experimental {
        -webkit-transition: $property $speed $ease;
        -moz-transition: $property $speed $ease;
    }
    transition: $property $speed $ease;
}

// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type: border-box) {
    @if $experimental {
        -moz-box-sizing: $type;
        -webkit-box-sizing: $type;
    }
    box-sizing: $type;
}

// We use this to create equilateral triangles
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
    content: "";
    display: block;
    width: 0;
    height: 0;
    border: inset $triangle-size;
    @if $triangle-direction == top {
        border-color: $triangle-color transparent transparent transparent;
        border-top-style: solid;
    }
    @if $triangle-direction == bottom {
        border-color: transparent transparent $triangle-color transparent;
        border-bottom-style: solid;
    }
    @if $triangle-direction == left {
        border-color: transparent transparent transparent $triangle-color;
        border-left-style: solid;
    }
    @if $triangle-direction == right {
        border-color: transparent $triangle-color transparent transparent;
        border-right-style: solid;
    }
}

// We use this to do clear floats
@mixin clearfix {
    *zoom: 1;
    &:before, &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// We use this to add a glowing effect to block elements
@mixin block-glowing-effect($selector: focus, $fade-time: 300ms, $glowing-effect-color: fade-out($primary-color, 0.25)) {
    @if $experimental {
        -webkit-transition: -webkit-box-shadow $fade-time, border-color $fade-time ease-in-out;
        -moz-transition: -moz-box-shadow $fade-time, border-color $fade-time ease-in-out;
    }
    transition: box-shadow $fade-time, border-color $fade-time ease-in-out;
    &:#{$selector} {
        @if $experimental {
            -webkit-box-shadow: 0 0 5px $glowing-effect-color;
            -moz-box-shadow: 0 0 5px $glowing-effect-color;
        }
        box-shadow: 0 0 5px $glowing-effect-color;
        border-color: $glowing-effect-color;
    }
}




@mixin not-flexbox-browse-grid($thumbnail-height) {
    display: block;

    > li.productThumbnail, > li.cmioProductThumbnail {
        height: $thumbnail-height;

        ul.morecolors {
            > li {
                height: 17px;
                padding: 0;
                float: left;

                &.ipopSwatch {
                    width: 17px;
                }
            }
        }
    }
}

// Fonts
//= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
//= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =


//csg button fonts
$csg_v1_font-size-tiny: em-calc(12);
$csg_v1_font-size-small: em-calc(14);
$csg_v1_font-size-medium: em-calc(16);   //16px
$csg_v1_font-size-large: em-calc(20);

$font-size-tiny: em-calc(12);
$font-size-small: em-calc(14);
$font-size-medium: em-calc(16);   //16px
$font-size-large: em-calc(20);

//global variables on Category Splash page  -- NOTE: No!!! actually these are to be Globally used!!!  So this is now the "wide" container value
//introduced by the "C2 Project" ...so far this should be re-used to widen the catsplash/subsplash/browse pages
$width-global-container: 960px;
//Global Value: "spacing between the content"...to be used for margins or paddings that space out content
$width-content-spacing: 6px;

$total-columns: 16 !default;
$row-width: 100% !default;
$column-gutter: em-calc(1) !default;

$small-screen: 600px !default;     //anything below $small-screen is .small class
$medium-screen: 1024px !default;   //above $small-screen and below $medium screen is .medium class
$large-screen: 1440px !default;    //above $medium-screen is .large class

// Small screens
$screen: "only screen";  // mobile styles
$small: "only screen and (min-width: #{$small-screen})";

//Medium screens
$medium: "only screen and (min-width: #{$medium-screen})";

//Large screens
$large: "only screen and (min-width: #{$large-screen})";

//For Tablets
$landscape: "only screen and (orientation: landscape)";
$portrait: "only screen and (orientation: portrait)";
$tablet: "only screen and (max-width: #{$medium-screen})";


$color-black: #000000;
$color-darkgray: #666666;
$color-mediumgray: #CCCCCC;
$color-lightgray: #EEEEEE;
$color-red: #FF0000;
$color-white: #FFFFFF;

//Colors for Banner Machine
$color-media-black: #000000;
$color-media-dark-gray: #333333;
$color-media-gray: #666666;
$color-media-medium-gray: #CCCCCC;
$color-media-light-gray: #EEEEEE;
$color-media-registry-pink: #BD2171;
$color-media-white: #FFFFFF;


//IMPORTANT: Asset Host: This is the central definition of the macys assets host for the entire CSS framework
$assets_host: '//assets.macysassets.com';

//MODAL VARS
$modal-overlay-title-font : 1.5em Helvetica,arial,sans-serif;
$modal-background-color: $macysWhite;
