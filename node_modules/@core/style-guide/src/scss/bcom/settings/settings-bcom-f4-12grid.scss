@import '../../common/util/util';

//Foundation 6 gloabl variable overrides
//BCOM - IE8 flag
$ie8: false !default;
$device: pc !default;

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with browser-based text zoom or user-set defaults.
$base-font-size: 100% !default;
// This is the default html and body font-size for the base em value.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be a different size and not have it effect grid size too,
// set the value of $em-base to $base-font-size ($em-base: $base-font-size;)
$em-base: 16px !default;
$base-font-size: rem-calc(16);
$rem-base: strip-unit($base-font-size);

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Converts "px" to "em" using the ($)em-base
@function convert-to-em($value, $base-value: $em-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

// Working in ems is annoying. Think in pixels by using this handy function, em-calc(#)
// Just enter the number, no need to mention "px"
@function em-calc($values, $base-value: $em-base) {
  $max: length($values); // Get the total number of parameters passed

  // If there is only 1 parameter, then return it as an integer.
  // This is done because a list can't be multiplied or divided even if it contains a single value
  @if $max == 1 { @return convert-to-em(nth($values, 1), $base-value); }

  $emValues: (); // This will eventually store the converted $values in a list
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i), $base-value));
  }
  @return $emValues;
}

@function convert-to-rem($pxWidth) {
  $pxWidth: strip-unit($pxWidth);
  $pxWidth: $pxWidth / $rem-base * 1rem;
  @if ($pxWidth == 0rem) { $pxWidth: 0; }
  @return $pxWidth;
}

// Various global styles

$default-float: left;

// modal-overlay variables

$modal-overlay-title-font : 1.5em Helvetica,arial,sans-serif;
$modal-background-color: #FFFFFF;

/// Global value used for margin on components.
/// @type Number
$global-margin: 1rem !default;

/// Sets the text direction of the CSS. Can be either `ltr` or `rtl`.
/// @type Keyword
$global-text-direction: ltr !default;

/// Global tolerance for color pick contrast.
/// @type Number
$global-color-pick-contrast-tolerance: 0 !default;

// Internal variables used for text direction
$global-left: if($global-text-direction == rtl, right, left);
$global-right: if($global-text-direction == rtl, left, right);

/// Global value used for all elements that have a border radius.
/// @type Number
$global-radius: 0 !default;


// 0. Colors
// ---------

$bloomiesBlueOutline: #85bffc;

$bloomiesWhite: #ffffff;
$bloomiesRed: #DE3412;
$bloomiesBlack: #000000;
$bloomiesBlackLighter: #404040;
$bloomiesBlackLightest: #666666;
$bloomiesGray: #D0D0D0;
$bloomiesGrayLightest: #F8F8F9;
$bloomiesGrayLighter: #E5E5E5;
$bloomiesPink: #C00C99;
$bloomiesPurple: #400099;
$bloomiesYellow: #FFF400;
$bloomiesGreen: #228900;
$bloomiesBlue: #1776BB;
$bloomiesOrange: #E67700;

$anchor-text-transform: capitalize;
$small-font-size: percentage(10 / $rem-base);


$primary-font-color: $bloomiesWhite;
$secondary-font-color: $bloomiesBlackLighter;
$tertiary-color: $bloomiesBlackLighter;
$tertiary-color-active: $bloomiesBlack;
$tertiary-color-disabled: lighten($tertiary-color, 0.4);

//* ------------------------
// Grid
//------------------------ */

//grid breakpoint sizes and queries for .small-/.medium-/.large- grid classes

$small-screen: rem-calc(600);
$medium-screen: rem-calc(1024);
$large-screen: rem-calc(1440);

$page-max-width: rem-calc($large-screen);
$page-min-width: rem-calc(320);

$phone: "only screen and (max-width: #{$small-screen - 1})";
$tablet: "only screen and (max-width: #{$medium-screen})";

// 1. Global
// ---------
$button-padding: rem-calc(15) rem-calc(30);

$button-margin: rem-calc(40) rem-calc(20) rem-calc(20) rem-calc(0);

/* NOTE: Temporarily removing pink hover color and update to current production styling for primary and secondary buttons.
*once the majority of the pages are consuming CSG 2.0 we will add pink hover again and ask teams to bump the version.*/

/// Background color on hover for buttons.
/// @type Color
$button-background-hover: $bloomiesBlack;

/// Color lightness on hover for hollow buttons.
/// @type Number
$button-hollow-hover-lightness: $bloomiesBlack;

/// transitions for buttons.
/// @type List
$button-transition: background-color 0.3s ease-out, color 0.3s ease-out !default;

$bloomies-palette: (
  primary: $bloomiesBlack,
  secondary: $bloomiesWhite
  //tertiary: $bloomiesGray
) !default;
$button-palette: (
  primary: $bloomiesBlack,
  secondary: $bloomiesWhite
);
$body-bg: $bloomiesWhite !default;
$body-background: $bloomiesWhite !default;
$body-font-color: $bloomiesBlackLighter !default;
$body-font-family: "Avenir", Helvetica, Arial, sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;

// 2. Breakpoints
// --------------

$breakpoints: (
  small: 0,
  medium: rem-calc(600),
  large: rem-calc(1024),
  xlarge: rem-calc(1280),
  xxlarge: rem-calc(1440)
);

$grid-margin-gutters: (
  small: rem-calc(10),
  medium: rem-calc(10)
) !default;

// 20. Forms
// ---------
$select-height: rem-calc(45);
$select-triangle-color: $bloomiesGray;
$select-background: $bloomiesWhite;
$form-spacing: rem-calc(20);
$input-padding: $form-spacing / 2;
$input-border-color:$bloomiesBlackLightest;
$input-border: rem-calc(1) solid $input-border-color;
$input-color: $bloomiesBlack;
$input-transition: box-shadow 0.5s, border-color 0.25s ease-in-out;
$input-border-focus: rem-calc(1) solid bloomiesBlackLightest;
$input-background-focus: $bloomiesWhite;
$input-shadow-focus: none;
$input-border-disabled-color: rgba($input-border-color, 0.5);
$input-border-disabled: rem-calc(1) solid $input-border-disabled-color;
$input-background-disabled: $bloomiesWhite;
$input-cursor-disabled: not-allowed;

$include-html-classes: true;
$include-html-button-classes: true;
