const _ = require('lodash');
const path = require('path');
const ExtractTextPlugin = require('extract-text-webpack-plugin');
const pkg = require('@core/lib/project/pkg')();
const chalk = require('chalk');

const isProd = process.env.NODE_ENV === 'production';
const isExcluding = _.get(pkg, 'config.excludeExtraction', false);

const productionLoaders = [
  {
    loader: 'css-loader',
    options: { minimize: true, importLoaders: 1 },
  },
  {
    loader: 'sass-loader',
    options: {
      includePaths: [
        path.resolve(__dirname, '../../../@core/style-guide/src/scss'),

        // @TODO remove compass support in favor of CSG
        path.resolve(__dirname, '../../../compass-mixins/lib'),
      ],
    },
  },
];

const devLoaders = [{ loader: 'style-loader' }].concat(_.clone(productionLoaders, true));
devLoaders.forEach(loader => _.set(loader, 'options.sourceMap', true));

const cssLoaders = [{
  test: isExcluding ? /^((?!_dontExtract_).)*\.(css|scss)$/ : /\.(css|scss)$/,
  use: isProd
    ? ExtractTextPlugin.extract({
      use: productionLoaders,
      fallback: 'style-loader',
    })
    : devLoaders,
}];

if (isExcluding) {
  console.log(chalk.red.bold('\n -= USING EXPERIMENTAL SCSS EXCLUSION =-\n\n'));

  cssLoaders.push({
    test: /(_dontExtract_)\w+\.(css|scss)$/,
    use: devLoaders,
  });
}

module.exports = cssLoaders;
